.\"	$Id$
.\"
.\" Copyright (c) 2019 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt SQLBOX_OPEN 3
.Os
.Sh NAME
.Nm sqlbox_open
.Nd open a database
.Sh LIBRARY
.Lb sqlbox
.Sh SYNOPSIS
.In stddef.h
.In sqlbox.h
.Ft size_t
.Fo sqlbox_open
.Fa "struct sqlbox *box"
.Fa "size_t index"
.Fc
.Sh DESCRIPTION
Open the database passed in the
.Vt struct sqlbox_src
array of
.Xr sqlbox_alloc 3
at
.Fa index .
.Pp
The source has filename
.Va fname
and an open mode
.Va mode .
The filename may be
.Qq :memory:\& ,
for an in-memory database or the empty string for a private on-disc
database.
Both of these designations are available until the database is closed.
Remote databases documented in
.Xr sqlite3_open16 3
are not currently supported.
.Pp
The mode may be
.Dv SQLBOX_SRC_RO
for a readonly source,
.Dv SQLBOX_SRC_RW
for readable and writable, and
.Dv SQLBOX_SRC_RWC
to also be created.
Note that in-memory databases need not provide the creation bit.
.Pp
If the source is not closed with
.Xr sqlbox_close 3 ,
it is automatically closed on
.Xr sqlbox_free 3 .
This is not considered an error, as a common usage pattern is a role
with permission opening the database, shedding its role, then the close
being relegated to the full destruction of the box.
.Pp
It's perfectly alright to open multiple databases of the same index,
although it's probably not what you want.
.Ss SQLite3 Implementation
Opens the database with
.Xr sqlite3_open_v2 3 .
Has a random back-off on return of
.Dv SQLITE_BUSY ,
.Dv SQLITE_LOCKED ,
or
.Dv SQLITE_PROTOCOL .
Otherwise, if not
.Dv SQLITE_OK ,
considers it a failed open.
Possibly closes again on error with
.Xr sqlite3_close 3 .
.Sh RETURN VALUES
Returns an identifier >0 if communication with the box works, zero
otherwise (opening the source files, etc.).
.Pp
If
.Fn sqlbox_open
fails,
.Fa box
is no longer accessible beyond
.Xr sqlbox_ping 3
and
.Xr sqlbox_free 3 .
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.Sh EXAMPLES
This opens an in-memory database then immediately exits.
.Bd -literal
struct sqlbox *p;
struct sqlbox_src srcs[] = {
  { .fname = (char *)":memory:",
    .mode = SQLBOX_SRC_RWC },
};
struct sqlbox_cfg cfg;
size_t id;

memset(&cfg, 0, sizeof(struct sqlbox_cfg));
cfg.msg.func_short = warnx;
cfg.srcs.srcsz = 1;
cfg.srcs.srcs = srcs;
if ((p = sqlbox_alloc(&cfg)) == NULL)
  errx(EXIT_FAILURE, "sqlbox_alloc");
if (!(id = sqlbox_open(p, 0)))
  errx(EXIT_FAILURE, "sqlbox_open");

sqlbox_free(p);
.Ed
.Pp
The following opens (and creates, if not found) the database
.Pa db.db .
The database is explicitly closed.
.Bd -literal
struct sqlbox *p;
struct sqlbox_src srcs[] = {
  { .fname = (char *)"db.db",
    .mode = SQLBOX_SRC_RWC },
};
struct sqlbox_cfg cfg;
size_t id;

memset(&cfg, 0, sizeof(struct sqlbox_cfg));
cfg.msg.func_short = warnx;
cfg.srcs.srcsz = 1;
cfg.srcs.srcs = srcs;
if ((p = sqlbox_alloc(&cfg)) == NULL)
  errx(EXIT_FAILURE, "sqlbox_alloc");
if (!(id = sqlbox_open(p, 0)))
  errx(EXIT_FAILURE, "sqlbox_open");
/* Perform work... */
if (!sqlbox_close(p, id))
  errx(EXIT_FAILURE, "sqlbox_close");
sqlbox_free(p);
.Ed
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr sqlbox_close 3 ,
.Xr sqlbox_free 3
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
