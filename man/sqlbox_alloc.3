.\"	$Id$
.\"
.\" Copyright (c) 2019 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt SQLBOX_ALLOC 3
.Os
.Sh NAME
.Nm sqlbox_alloc
.Nd allocate sqlbox context
.Sh LIBRARY
.Lb sqlbox
.Sh SYNOPSIS
.In stddef.h
.In sqlbox.h
.Ft struct sqlbox *
.Fo sqlbox_alloc
.Fa "struct sqlbox_cfg *cfg"
.Fc
.Sh DESCRIPTION
Creates an sqlbox context.
.Fn sqlbox_alloc
first verifies
.Fa cfg ,
then forks a child process, then returns.
The child process waits for instructions over a socket pair.
The
.Fa cfg
is inherited by the child process but never freed, so they may either be
constructed statically or allocated and freed by the caller.
.Pp
The
.Fa cfg
has the following members:
.Bl -tag -width Ds
.It Vt stmts
All SQL statements required by all sources.
.It Vt roles
Roles and role assignment to statements, sources, and role transition.
.It Vt srcs
Database sources (in-memory and on-disc).
.It Vt msg
Error and debug logging.
.El
.Pp
A common idiom is to fill the entire structure with
.Li 0
then assign only applicable members.
.Fn sqlbox_alloc
performs the following validity checks on this structure,
if not
.Dv NULL ,
before forking:
.Bl -bullet
.It
source filenames may not be
.Dv NULL
.It
statements may not be
.Dv NULL
or empty strings
.It
the default role must be zero or a valid role index
.It
each role statement must be a valid index
.It
each role transition role must be a valid index
.It
each role database must be a valid index
.El
.Pp
After successful return, a common idiom is for callers to reduce system
resources to just the communciation socket with the context.
This may be affected with
.Xr pledge 2 ,
if on
.Ox ,
or similar.
.Sh RETURN VALUES
Returns the allocated context or
.Dv NULL
if
.Fa cfg
is invalid, memory allocation failed, or the
.Xr fork 2
or
.Xr socketpair 2
functions failed.
.Pp
On success, the pointer must be freed with
.Xr sqlbox_free 3 .
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.Sh EXAMPLES
This allocates a simple memory-only database source and sets the warning
channel to
.Xr warnx 3 .
.Bd -literal
struct sqlbox *p;
struct sqlbox_cfg cfg;
struct sqlbox_src srcs[] = {
  { .fname = (char *)":memory:",
    .mode = SQLBOX_MODE_RWC }
};

memset(&cfg, 0, sizeof(struct sqlbox_cfg));
cfg.msg.func_short = warnx;
cfg.srcs.srcs = srcs;
cfg.srcs.srcsz = 1;

if ((p = sqlbox_alloc(&cfg)) == NULL)
  errx(EXIT_FAILURE, "sqlbox_alloc");
.Ed
.Pp
The following does the same, but with RBAC for the source.
In this example, arrays in
.Vt struct sqlbox_role
are not set to
.Dv NULL
if they have an associated length as in the case of
.Va rolesz .
.Bd -literal
struct sqlbox *p;
struct sqlbox_cfg cfg;
struct sqlbox_role roles[] = {
  { .rolesz = 0,
    .stmtsz = 0,
    .srcs = (size_t[]){ 0 },
    .srcsz = 1 }
};
struct sqlbox_src srcs[] = {
  { .fname = (char *)":memory:",
    .mode = SQLBOX_MODE_RWC }
};

memset(&cfg, 0, sizeof(struct sqlbox_cfg));
cfg.srcs.srcs = srcs;
cfg.srcs.srcsz = 1;
cfg.roles.roles = roles;
cfg.roles.rolesz = 1;
cfg.roles.defrole = 0;

if ((p = sqlbox_alloc(&cfg)) == NULL)
  errx(EXIT_FAILURE, "sqlbox_alloc");
.Ed
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr sqlbox_free 3
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
